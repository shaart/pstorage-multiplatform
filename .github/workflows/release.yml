# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Release

on:
  workflow_dispatch:
  workflow_call:

defaults:
  run:
    shell: bash

jobs:
  release:
    name: ${{ github.event.head_commit.message }}
    runs-on: 'ubuntu-latest'
    permissions: 'write-all'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download built Artifacts (MacOS)
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build-release.yml
          workflow_conclusion: success
          branch: main
          name_is_regexp: false
          name: distributable-macos-latest
          if_no_artifact_found: fail

      - name: Download built Artifacts (Windows)
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build-release.yml
          workflow_conclusion: success
          branch: main
          name_is_regexp: false
          name: distributable-windows-latest
          if_no_artifact_found: fail

      - name: Set tag variable
        id: vars
        run: echo "app_tag=$(cat gradle.properties | grep app.version | cut -d'=' -f2)" >> $GITHUB_OUTPUT

      - name: Create tag from version
        id: tag_create
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: v
          custom_tag : ${{ steps.vars.outputs.app_tag }}
          create_annotated_tag: false
          default_bump: false

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.vars.outputs.app_tag }}
          draft: true
          prerelease: ${{ contains(github.event.inputs.version, '-rc') || contains(github.event.inputs.version, '-b') || contains(github.event.inputs.version, '-a') }}
          files: |
            build/**/*.dmg
            build/**/*.msi
            build/compose/jars/*.jar
